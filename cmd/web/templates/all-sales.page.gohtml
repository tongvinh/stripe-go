{{ template "base" .}}

{{- define "title" -}}
    All Sales
{{- end -}}

{{- define "content" -}}
    <h2 class="mt-5">All Sales</h2>
    <hr>

        <table id="sales-table" class="table table-striped">
            <thead>
                <tr>
                    <th>Transaction</th>
                    <th>Customer</th>
                    <th>Product</th>
                    <th>Amount</th>
                    <th>Static</th>
                </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
        <nav>
            <ul id="paginator" class="pagination"></ul>
        </nav>
{{- end -}}

{{- define "js" -}}
    <script>
        let currentPage = 1;
        let pageSize = 5;

        function paginator(pages, curPage){
            let p = document.getElementById("paginator");

            let html = `<li class="page-item"><a href="#!" class="page-link pager" data-page="${curPage -1}">&lt;</a></li>`

            for (let i = 0; i <= pages; i++){
                html += `<li class="page-item"><a href="#!" class="page-link pager" data-page="${i  + 1}">${i  + 1}</a></li>`
            }
                html += `<li class="page-item"><a href="#!" class="page-link pager" data-page="${curPage  + 1}">&gt;</a></li>`

            p.innerHTML = html;

            let pageBtns = document.getElementsByClassName("pager");
            for (let j =0; j < pageBtns.length; j++){
                pageBtns[j].addEventListener("click", function (evt){
                    let desiredPage = evt.target.getAttribute("data-page");
                    console.log("clicked, and data-page is", desiredPage);
                    if ((desiredPage > 0) && (desiredPage <= pages + 1)){
                        console.log("would go to page", desiredPage);
                        updateTable(pageSize,desiredPage);
                    }
                })
            }
        }

        function updateTable(ps, cp) {
            let token = localStorage.getItem("token")
            let tbody = document.getElementById("sales-table").getElementsByTagName('tbody')[0];
            tbody.innerHTML = ""

            let body = {
                page_size: parseInt(ps, 10),
                page: parseInt(cp, 10),
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept':'application/json',
                    'Content-Type': 'application/json',
                    'Authorization':'Bearer ' + token,
                },
                body: JSON.stringify(body),
            }

            fetch("{{.API}}/api/admin/all-sales", requestOptions)
                .then(response => response.json())
                .then(function (data){
                    console.log(data);

                    if (data.orders) {
                        data.orders.forEach(function (i) {
                            let newRow = tbody.insertRow();
                            let newCell = newRow.insertCell();

                            newCell.innerHTML = `<a href="/admin/sales/${i.id}">Order ${i.id}</a>`

                            newCell = newRow.insertCell();
                            let item = document.createTextNode(i.customer.last_name + ", " + i.customer.first_name)
                            newCell.appendChild(item)

                            newCell = newRow.insertCell();
                            item = document.createTextNode(i.widget.name);
                            newCell.appendChild(item);

                            let cur = formatCurrency(i.transaction.amount);
                            newCell = newRow.insertCell();
                            item = document.createTextNode(cur);
                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            if (i.status_id != 1){
                                newCell.innerHTML = `<span class="badge bg-danger">Refunded</span>`
                            }else{
                                newCell.innerHTML = `<span class="badge bg-success">Charged</span>`
                            }
                        })
                        paginator(data.last_page, data.current_page);
                    } else{
                        let newRow = tbody.insertRow();
                        let newCell = newRow.insertCell();
                        newCell.setAttribute("colspan", "5")
                        newCell.innerHTML = 'No data available';
                    }
                })
        }
        document.addEventListener("DOMContentLoaded", function (){
            updateTable(pageSize, currentPage)
        })
        function formatCurrency(amount) {
            let c = parseFloat(amount/100);
            return c.toLocaleString("en-CA", {
                style: 'currency',
                currency: 'CAD',
            })
        }
    </script>
{{- end -}}